"use strict";(self.webpackChunkhot_gate_docs=self.webpackChunkhot_gate_docs||[]).push([[7101],{3905:function(e,t,n){n.d(t,{Zo:function(){return h},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},h=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),p=l(n),f=o,d=p["".concat(c,".").concat(f)]||p[f]||u[f]||a;return n?r.createElement(d,s(s({ref:t},h),{},{components:n})):r.createElement(d,s({ref:t},h))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5549:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return h},default:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],i={sidebar_position:3},c="Instant CC Settlement",l={unversionedId:"Cross-chain Settlement/Instant_CC_Settlement",id:"Cross-chain Settlement/Instant_CC_Settlement",isDocsHomePage:!1,title:"Instant CC Settlement",description:"---",source:"@site/docs/5-Cross-chain Settlement/Instant_CC_Settlement.md",sourceDirName:"5-Cross-chain Settlement",slug:"/Cross-chain Settlement/Instant_CC_Settlement",permalink:"/whitepaper-docs/Cross-chain Settlement/Instant_CC_Settlement",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"whitepaperSidebar",previous:{title:"Fast CC Settlement",permalink:"/whitepaper-docs/Cross-chain Settlement/Fast_CC_Settlement"},next:{title:"Tokenomics",permalink:"/whitepaper-docs/Tokenomics"}},h=[{value:"Introduction",id:"introduction",children:[]},{value:"Instant Cross-Chain Transfer",id:"instant-cross-chain-transfer",children:[]},{value:"Instant Cross-Chain Exchange",id:"instant-cross-chain-exchange",children:[]},{value:"Fees",id:"fees",children:[]}],u={toc:h};function p(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"instant-cc-settlement"},"Instant CC Settlement"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("font",{size:"4"},(0,a.kt)("p",null,"Suppose that Alice has some amount of token A on the source chain. Alice can make a instant cross-chain settlement request on the source chain to transfer her assets to the target chain, or exchange her assets on the target chain. For her request to be executed on the target chain, the request should get enough confirmation on the source chain, but it does not need to get finalized. ")),(0,a.kt)("h2",{id:"instant-cross-chain-transfer"},"Instant Cross-Chain Transfer"),(0,a.kt)("font",{size:"4"},(0,a.kt)("p",null,"To perform a instant cross-chain transfer, Alice sends a lock request that locks her token A on the source chain. In the lock request, Alice determines the request data such as recipient address, teleporter fee, etc. After Alice's request gets enough confirmations on the source chain, a teleporter submits this request on the target chain. The smart contract checks the inclusion of the request on the source chain and gives a wrapped token A as a loan from the instant pool of token A. After the request gets finalized on the source chain, a teleporter calls the smart contract to mint wrapped token A that belong to the request. Then the minted wrapped token A is sent to the instant pool of token A to pay back the loan.")),(0,a.kt)("h2",{id:"instant-cross-chain-exchange"},"Instant Cross-Chain Exchange"),(0,a.kt)("font",{size:"4"},(0,a.kt)("p",null,"The instant cross-chain exchange process is similar to instant cross-chain transfer, except that in the lock request, Alice determines exchange-related information such as token B address, the minimum amount of token B that she expects to receive, the recipient address, etc. After lending wrapped token A to Alice from the instant pool of token A, her tokens are exchanged for token B using the liquidity pool of token A and token B, and token B is sent to the recipient address that was determined by Alice. If exchanging was unsuccessful, the loan of token A is sent to the recipient's address.")),(0,a.kt)("h2",{id:"fees"},"Fees"))}p.isMDXComponent=!0}}]);