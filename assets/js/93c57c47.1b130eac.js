"use strict";(self.webpackChunkhot_gate_docs=self.webpackChunkhot_gate_docs||[]).push([[243],{3905:function(e,t,n){n.d(t,{Zo:function(){return h},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},h=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),p=l(n),d=a,f=p["".concat(c,".").concat(d)]||p[d]||u[d]||s;return n?r.createElement(f,o(o({ref:t},h),{},{components:n})):r.createElement(f,o({ref:t},h))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7539:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return h},default:function(){return p}});var r=n(7462),a=n(3366),s=(n(7294),n(3905)),o=["components"],i={sidebar_position:7},c="Instant CC Settlement",l={unversionedId:"Instant_CC_Settlement",id:"Instant_CC_Settlement",isDocsHomePage:!1,title:"Instant CC Settlement",description:"---",source:"@site/docs/Instant_CC_Settlement.md",sourceDirName:".",slug:"/Instant_CC_Settlement",permalink:"/whitepaper-docs/Instant_CC_Settlement",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"whitepaperSidebar",previous:{title:"Fast CC Settlement",permalink:"/whitepaper-docs/Fast_CC_Settlement"},next:{title:"Tokenomics",permalink:"/whitepaper-docs/Tokenomics"}},h=[{value:"Introduction",id:"introduction",children:[]},{value:"Instant Cross-Chain Transfer",id:"instant-cross-chain-transfer",children:[]},{value:"Instant Cross-Chain Exchange",id:"instant-cross-chain-exchange",children:[]},{value:"Fees",id:"fees",children:[]},{value:"Staking",id:"staking",children:[]}],u={toc:h};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"instant-cc-settlement"},"Instant CC Settlement"),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"introduction"},"Introduction"),(0,s.kt)("font",{size:"4"},(0,s.kt)("div",{align:"justify"},(0,s.kt)("p",null,"Suppose that Alice has some amount of token A on the source chain. Alice can make an instant cross-chain settlement request to transfer her assets to the target chain, or exchange her assets on the target chain. For her request to be executed on the target chain, Alice needs to stake enough TDT on the target chain. "))),(0,s.kt)("h2",{id:"instant-cross-chain-transfer"},"Instant Cross-Chain Transfer"),(0,s.kt)("p",{align:"center"},(0,s.kt)("img",{src:"../../img/TeleportDAO_Instant_CC_Transfer.jpg"})),(0,s.kt)("font",{size:"4"},(0,s.kt)("div",{align:"justify"},(0,s.kt)("p",null,"To perform an instant cross-chain transfer, Alice sends a signed instant loan request to teleporters. In the request, Alice determines the requested amount and the recipient's address. A teleporter submits this request on the target chain. The smart contract checks the validity of the request's signature and makes sure it belongs to Alice. Then, the smart contract checks whether Alice has enough collateral to get the requested amount or not. If Alice has already staked enough collateral, the instant pool of token A sends the requested amount to Alice."),(0,s.kt)("p",null,"Alice has a limited time to pay the instant loan back. To pay it back, Alice sends her token A along with a lock request on the source chain. After the request gets finalized on the source chain, a teleporter submits the request on the target chain. The smart contract checks that the request has been finalized on the source chain, then, mints wrapped token A for the instant pool to give Alice's loan back. If Alice does not pay back the instant loan in the predetermined time, a teleporter calls the smart contract to punish Alice. The contract slashes the staked TDT of Alice and exchanges them for wrapped token A."),(0,s.kt)("p",null,"In order to make the protocol safer, instead of staking TDT, users are required to stake AVAX as collateral to be able to perform instant cross-chain settlements. This is to make instant pools more secure while TDT price is volatile in the first phases of development. In the next phases, this requirement might change."))),(0,s.kt)("h2",{id:"instant-cross-chain-exchange"},"Instant Cross-Chain Exchange"),(0,s.kt)("p",{align:"center"},(0,s.kt)("img",{src:"../../img/TeleportDAO_Instant_CC_Exchange.jpg"})),(0,s.kt)("font",{size:"4"},(0,s.kt)("div",{align:"justify"},(0,s.kt)("p",null,"The instant cross-chain exchange process is similar to instant cross-chain transfer, except that in the instant loan request, Alice also determines exchange-related information such as token B address, the minimum amount of token B that she expects to receive. After lending wrapped token A to Alice from the instant pool of token A, her tokens are exchanged for token B using the liquidity pool of token A and token B, and token B is sent to the recipient address that was determined by Alice. If exchanging was unsuccessful, the loaned wrapped token A is sent to the recipient's address. After that, Alice has limited time to pay back the instant loan. If she does not pay it back in the predetermined time, she will get penalized."))),(0,s.kt)("h2",{id:"fees"},"Fees"),(0,s.kt)("font",{size:"4"},(0,s.kt)("div",{align:"justify"},(0,s.kt)("p",null,"The fees for instant cross-chain settlements are the same as fees for normal cross-chain settlements, plus an additional fee for its instant feature. This additional fee is called ",(0,s.kt)("strong",{parentName:"p"},"instant fee"),". Instant fee is paid to the liquidity providers of the instant pools, who lock their assets to be given as loans to the instant settlement users."))),(0,s.kt)("h2",{id:"staking"},"Staking"),(0,s.kt)("font",{size:"4"},(0,s.kt)("div",{align:"justify"},(0,s.kt)("p",null,"As explained above, users need to stake collateral to be able to perform instant cross-chain settlements. This is to make sure that users can pay back the loan they take from the instant pool. In this lending and borrowing system, the amount that users can borrow is limited by the amount they have staked. The smart contract determines the ratio of the collateral to the borrowed amount properly to keep the instant pools safe. "))))}p.isMDXComponent=!0}}]);